#!/bin/bash

# Script to tunnel to a remote server from a firewall using a third
# server in the middle.

[ -f "$HOME/scripts/colors" ] && source $HOME/scripts/colors

USAGE="USAGE:\n\t tunnel-create $Color_Blue BOUNCE_SERVER DESTINATION$COlor_Off $Color_Cyan[BOUNCE_PORT] [DEST_PORT]$Color_Off\n\n"
USAGE+="\t $Color_Blue BOUNCE_SERVER$Color_Off\t - Server through which you will be tunneling\n"
USAGE+="\t $Color_Blue DESTINATION$Color_Off\t - Server you want to ssh into.\n"
USAGE+="\t $Color_Cyan [BOUNCE_PORT]$Color_Off\t - (optional) BOUNCE_SERVER SSHD port. Default is 22.\n"
USAGE+="\t $Color_Cyan [DEST_PORT]$Color_Off\t - (optional) DESTINATION SSHD port. Default is 22.\n"
USAGE+="\n\t Example:\n\t\t\t tunnel-create foo.example.com server.example.com 443\n"

if [ -z $DEFAULT_TUNNEL_BOUNCE_SERVER ]; then
    [ -z $1 ] && { echo -e "\n$Color_Red ERROR:$Color_Off no $Color_Blue BOUNCE_SERVER$Color_Off.\n\n $USAGE"; exit 1; }
    BOUNCE_SERVER=$1
else
    BOUNCE_SERVER=$DEFAULT_TUNNEL_BOUNCE_SERVER
fi

if [ -z $DEFAULT_TUNNEL_DESTINATION_SERVER ]; then
    [ -z $2 ] && { echo -e "\n$Color_Red ERROR:$Color_Off no $Color_Blue DESTINATION$Color_Off.\n\n $USAGE"; exit 1; }
    DESTINATION=$2
else
    DESTINATION=$DEFAULT_TUNNEL_DESTINATION_SERVER
fi


if [ -z $3 ]; then
    BOUNCE_PORT=22
    [ -z $DEFAULT_TUNNEL_BOUNCE_PORT ] || BOUNCE_PORT=$DEFAULT_TUNNEL_BOUNCE_PORT
    echo -e "$Color_Yellow WARNING:$Color_Off No BOUNCE_PORT. Assuming $BOUNCE_PORT."
else
    BOUNCE_PORT=$3
fi

if [ -z $4 ]; then
    DEST_PORT=22
    [ -z $DEFAULT_TUNNEL_DESTINATION_PORT ] || DEST_PORT=$DEFAULT_TUNNEL_DESTINATION_PORT
    echo -e "$Color_Yellow WARNING:$Color_Off No DEST_PORT. Assuming $DEST_PORT."
else
    DEST_PORT=$4
fi


echo -e "\n\tTunneling to $Color_Blue$DESTINATION$Color_Off via $Color_Blue$BOUNCE_SERVER$Color_Off"
echo -e "\n\tListening for connections on port: $Color_Green 1234$Color_Off"
echo -e "\tTo connect to $Color_Blue$DESTINATION$Color_Off use:\n\n\t\ttunnel-ssh\n"
echo -e "\t$Color_White Use Ctrl+C to kill the tunnel.$Color_Off\n"
ssh -p $BOUNCE_PORT -N -T $BOUNCE_SERVER -L 1234:$DESTINATION:$DEST_PORT
